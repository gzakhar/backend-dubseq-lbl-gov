<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns="http://www.springframework.org/schema/beans" xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
>
<!--list of organisms on first page-->
    <bean id="getOrganismsQuery" class="java.lang.String">
        <constructor-arg>
            <value><![CDATA[
select
	g.genome_id,
	g."name",
	g."size",
	g.ncbi_taxonomy_id,
	g.phylum,
	(select count(*) from gene g2 where g2.genome_id = g.genome_id),
	(select count(*) from bagseq_library b where b.genome_id = g.genome_id) as library_count,
	(select count(*)
	from _temp_barseq_experiment e join bagseq_library b using(bagseq_library_id) where b.genome_id = g.genome_id) as experiment_count
from genome g
order by g.genome_id
        ]]></value>
        </constructor-arg>
    </bean>

<!--General summary for genome-->
    <bean id="getOrganismStatsQuery" class="java.lang.String">
        <constructor-arg>
            <value>
                <![CDATA[
select
	g."name" as "Name:",
	g.genome_id as "Genome id:",
	g."size" as "Size:",
	g.ncbi_taxonomy_id as "Taxonomy id:",
	g.phylum as "Phylum:",
	g.gene_count as "Gene count:"
from _temp_genome g
where g.genome_id = %d
                ]]>
            </value>
        </constructor-arg>
    </bean>


<!--    Libraries created for an organism -->
    <bean id="getOrganismLibrariesQuery" class="java.lang.String">
        <constructor-arg>
            <value>
                <![CDATA[
select
	bl."name" as "Name",
	bl.bagseq_library_id as "id",
	(select count(*) from barseq_experiment be where bl.bagseq_library_id = be.bagseq_library_id ) as "Experiments",
	(select count(*) from bagseq_fragment bf where bl.bagseq_library_id = bf.bagseq_library_id) as "Fragments"
from
	_temp_bagseq_library bl inner join _temp_genome g on bl.genome_id = g.genome_id
where
	g.genome_id = %d
                ]]>
            </value>
        </constructor-arg>
    </bean>

<!--top performing genes-->
    <bean id="getOrganismExperimentsQuery" class="java.lang.String">
        <constructor-arg>
            <value>
                <![CDATA[
select
	be."name",
	be."type",
	be."barseq_experiment_id",
	round(cast(bgs.score_cnnls as numeric), 2) as "max gene score"
from _temp_genome g
	inner join _temp_bagseq_library bl on g.genome_id = bl.genome_id
	inner join _temp_barseq_experiment be on bl.bagseq_library_id = be.bagseq_library_id
	inner join _temp_barseq_gene_score bgs on be.barseq_experiment_id = bgs.barseq_experiment_id
where g.genome_id = %d
order by bgs.score_cnnls desc limit 10
                ]]>
            </value>
        </constructor-arg>
    </bean>

    <bean id="getOrganismHistogramQuery" class="java.lang.String">
        <constructor-arg>
            <value>
                <![CDATA[
with
t as (
	select
		*
	from gene g
	inner join barseq_gene_score bgs on g.gene_id = bgs.gene_id
	where g.genome_id = %d
)
,ranges as (
select '-2' as name, -999999 as min, -2 as max union all
select '-1' as name, -2 as min, -1 as max union all
select '-0.5' as name, -1 as min, -0.5 as max union all
select '0' as name, -0.5 as min, 0 as max union all
select '1' as name, 0 as min, 1 as max union all
select '2' as name, 1 as min, 2 as max union all
select '4' as name, 2 as min, 4 as max union all
select '6' as name, 4 as min, 6 as max union all
select '9' as name, 6 as min, 999999 as max
)
select
	r.name,
	count(*) as cnt
from ranges r
left outer join t on t.score_cnnls >= r.min and t.score_cnnls < r.max
group by r.name
order by cast(r.name as float)
                ]]>
            </value>
        </constructor-arg>
    </bean>

</beans>
